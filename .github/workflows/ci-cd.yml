name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Lint HTML
      run: npm run validate-html
      continue-on-error: true
      
    - name: Lint CSS
      run: npm run lint-css
      continue-on-error: true
      
    - name: Lint JavaScript
      run: npm run lint-js
      continue-on-error: true
      
    - name: Test build process
      run: npm run build
      continue-on-error: true

  security-scan:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Run security audit
      run: |
        # Check for sensitive files
        find . -name "*.env*" -not -path "./node_modules/*" | head -10
        
        # Check for TODO/FIXME comments
        grep -r "TODO\|FIXME\|XXX" --include="*.js" --include="*.html" --include="*.css" . || true
        
        # Basic security checks
        echo "Security scan completed"
      continue-on-error: true

  performance-test:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Install Lighthouse CI
      run: npm install -g @lhci/cli@0.12.x
      
    - name: Start local server
      run: |
        python3 -m http.server 8000 &
        sleep 5
      
    - name: Run Lighthouse CI
      run: |
        lhci autorun --upload.target=temporary-public-storage
      continue-on-error: true

  deploy-preview:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    needs: [test, security-scan]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Deploy to Netlify (Preview)
      uses: nwtgck/actions-netlify@v2.0
      with:
        publish-dir: '.'
        production-branch: main
        github-token: ${{ secrets.GITHUB_TOKEN }}
        deploy-message: "Deploy from GitHub Actions"
        enable-pull-request-comment: true
        enable-commit-comment: false
      env:
        NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
        NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}

  deploy-production:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    needs: [test, security-scan, performance-test]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build for production
      run: npm run build
      
    - name: Deploy to Netlify (Production)
      uses: nwtgck/actions-netlify@v2.0
      with:
        publish-dir: '.'
        production-deploy: true
        github-token: ${{ secrets.GITHUB_TOKEN }}
        deploy-message: "Production deploy from GitHub Actions"
      env:
        NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
        NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
        
    - name: Notify deployment
      run: |
        echo "ðŸš€ Deployment completed successfully!"
        echo "Site URL: https://tozyapi.com.tr"